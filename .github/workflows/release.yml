name: Release next version
run-name: Release version ${{ inputs.releaseVersion }}
on:
  workflow_dispatch:
      inputs:
          releaseVersion:
              description: 'Version number to use for this release'
              required: true
              default: '0.x.x/patch/minor'
          releaseNoteUrl:
              description: 'Enter the location of edited release notes to use'
              required: false
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
            - name: Set line endings
              run: git config --global core.autocrlf true
            - name: Checkout
              uses: actions/checkout@v5
              with:
                ref: 'dev'
            - uses: actions/create-github-app-token@v2
              id: app-token
              with:
                app-id: ${{ secrets.APP_ID }}
                private-key: ${{ secrets.PRIVATE_KEY }}
            - name: Calculate the next version
              run: |
                MANIFEST_VERSION=$(grep -o '<Version number="[^"]*' manifest.xml | sed 's/<Version number="//')
                NEXT_VERSION=${{ github.event.inputs.releaseVersion }}
                if [ $NEXT_VERSION = "patch" ]; then
                  NEXT_VERSION=$(echo $MANIFEST_VERSION | awk -F. '{print $1"."$2"."$3+1}')
                elif [ $NEXT_VERSION = "minor" ]; then
                  NEXT_VERSION=$(echo $MANIFEST_VERSION | awk -F. '{print $1"."$2+1".0"}')
                fi
                echo "NEXT_VERSION=$NEXT_VERSION" >> "$GITHUB_ENV"
            - name: Connect with gh auth login
              run: echo "${{ steps.app-token.outputs.token }}" | gh auth login --with-token;
            - name: Generate Release notes
              if: ${{ github.event.inputs.releaseNoteUrl == '' }}
              run: >
                gh release view $(basename $(gh release create --target dev v$NEXT_VERSION --title "Release $NEXT_VERSION" --draft --generate-notes)) > temp_change.md
            - name: Use existing Release notes
              if: ${{ github.event.inputs.releaseNoteUrl != '' }}
              run: >
                gh release view $(basename ${{ github.event.inputs.releaseNoteUrl }}) > temp_change.md
              # The initial draft release must target dev for the changelog generation, but the final release should use the last commit on master to avoid tagging a wrong commit
            - name: Change release target to master
              run: |
                gh release edit v$NEXT_VERSION --target master
            - name: Tweak changelogs
              run: |
                sed -i 's/\r$//' .github/tweak_changelogs.sh
                chmod +x .github/tweak_changelogs.sh
                ./.github/tweak_changelogs.sh "v$NEXT_VERSION"
            - name: Update manifest version
              run: |
                sed -ri "s/<Version number=\"([^\"]*)\"/<Version number=\"$NEXT_VERSION\"/g" manifest.xml
            - name: Update manifest.xml
              run: python3 update_manifest.py --quiet --in-place
            - name: Create Pull Request
              uses: peter-evans/create-pull-request@v7
              with:
                  token: ${{ steps.app-token.outputs.token }}
                  draft: true
                  title: Release $NEXT_VERSION
                  branch: release-${{ env.NEXT_VERSION }}
                  body: |
                      Draft release of ${{ env.NEXT_VERSION }}

                      Edits will be made as necessary to prepare the codebase for release.
                  commit-message: 'Prepare release ${{ env.NEXT_VERSION }}'
